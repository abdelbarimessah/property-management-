generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Property {
  id                Int              @id @default(autoincrement())
  name              String           @db.VarChar(255)
  type              PropertyType
  number_of_units   Int              @default(0)
  rental_cost       Decimal          @db.Decimal(10, 2)
  tenants           Tenant[]
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
  propertyManager   PropertyManager? @relation(fields: [propertyManagerId], references: [id])
  propertyManagerId Int?
}

model Tenant {
  id              Int             @id @default(autoincrement())
  name            String          @db.VarChar(255)
  contact_details String          @db.VarChar(255)
  property        Property        @relation(fields: [property_id], references: [id], onDelete: Cascade)
  property_id     Int
  section         String?         @db.VarChar(50)
  rentalPayments  RentalPayment[]
  created_at      DateTime        @default(now())
  updated_at      DateTime        @updatedAt
}                                         

model RentalPayment {
  id           Int      @id @default(autoincrement())
  tenant       Tenant   @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  tenant_id    Int
  amount       Decimal  @db.Decimal(10, 2)
  payment_date DateTime
  settled      Boolean  @default(false)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model PropertyManager {
  id         Int        @id @default(autoincrement())
  username   String     @unique @db.VarChar(255)
  password   String     @db.VarChar(255)
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  properties Property[]
}

enum PropertyType {
  Apartment
  House
  Duplex
  Studio
}
